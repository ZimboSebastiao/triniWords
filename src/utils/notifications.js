import * as Notifications from "expo-notifications";

// Fun√ß√£o para pedir permiss√£o de notifica√ß√µes
export async function requestNotificationPermissions() {
  const { status } = await Notifications.getPermissionsAsync();
  if (status !== "granted") {
    const { status: newStatus } = await Notifications.requestPermissionsAsync();
    if (newStatus !== "granted") {
      alert("As notifica√ß√µes precisam ser ativadas nas configura√ß√µes.");
      return false;
    }
  }
  return true;
}

// Fun√ß√£o para agendar a notifica√ß√£o di√°ria
export async function scheduleDailyNotification() {
  const hasPermission = await requestNotificationPermissions();
  if (!hasPermission) return;

  // Cancela notifica√ß√µes anteriores para evitar duplica√ß√µes
  await Notifications.cancelAllScheduledNotificationsAsync();

  // Agenda a notifica√ß√£o para √†s 8h diariamente
  await Notifications.scheduleNotificationAsync({
    content: {
      title: "Good Morning! üåû",
      body: "Let's learn a new word! üìö",
      data: { screen: "LearnScreen" }, // Tela de destino ao clicar na notifica√ß√£o
    },
    trigger: {
      hour: 8, // 8h da manh√£
      minute: 0,
      repeats: true, // Repetir diariamente
    },
  });

  console.log("Notifica√ß√£o di√°ria agendada para √†s 8h!");
}
