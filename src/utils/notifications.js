import * as Notifications from "expo-notifications";
import { requestNotificationPermissions } from "./notificationsRequest";
import AsyncStorage from "@react-native-async-storage/async-storage";

export async function scheduleDailyNotification() {
  const hasPermission = await requestNotificationPermissions();
  if (!hasPermission) return;

  try {
    // Verificar se a notifica√ß√£o j√° foi agendada
    const notificationScheduled = await AsyncStorage.getItem(
      "notificationScheduled"
    );

    if (notificationScheduled === "true") {
      console.log("Notifica√ß√£o di√°ria j√° foi agendada.");
      return; // N√£o agenda novamente
    }

    // Cancelar notifica√ß√µes agendadas anteriores
    await Notifications.cancelAllScheduledNotificationsAsync();

    // Agendar nova notifica√ß√£o
    await Notifications.scheduleNotificationAsync({
      content: {
        title: "Let's learn! üë©‚Äçüè´",
        body: "Let's learn a new word today! üìö",
        data: { screen: "LearnScreen" },
      },
      trigger: {
        hour: 8,
        minute: 0,
        repeats: true,
      },
    });

    // Marcar que a notifica√ß√£o foi agendada
    await AsyncStorage.setItem("notificationScheduled", "true");

    console.log("Notifica√ß√£o di√°ria agendada para √†s 8h!");
  } catch (error) {
    console.error("Erro ao agendar a notifica√ß√£o:", error);
  }
}
